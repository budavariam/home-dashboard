import{j as a}from"./iframe-btbIs0Bq.js";const s=[{key:"hum",label:"Humidity"},{key:"tmp",label:"Temperature",borderDash:[5,5]},{key:"bat",label:"Battery",borderDash:[2,2]}],i=({selectedMetrics:t,onChange:r,className:n=""})=>a.jsx("div",{className:`flex gap-2 items-center ${n}`,children:s.map(({key:e,label:l})=>a.jsxs("label",{className:"text-gray-700 dark:text-gray-300",children:[a.jsx("input",{type:"checkbox",className:"mr-2",checked:t[e],onChange:m=>r({...t,[e]:m.target.checked})}),l]},e))});i.__docgenInfo={description:"",methods:[],displayName:"MetricSelector",props:{selectedMetrics:{required:!0,tsType:{name:"Record",elements:[{name:"union",raw:'"hum" | "tmp" | "bat"',elements:[{name:"literal",value:'"hum"'},{name:"literal",value:'"tmp"'},{name:"literal",value:'"bat"'}]},{name:"boolean"}],raw:"Record<MetricKey, boolean>"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(metrics: Record<MetricKey, boolean>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"union",raw:'"hum" | "tmp" | "bat"',elements:[{name:"literal",value:'"hum"'},{name:"literal",value:'"tmp"'},{name:"literal",value:'"bat"'}]},{name:"boolean"}],raw:"Record<MetricKey, boolean>"},name:"metrics"}],return:{name:"void"}}},description:""},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};export{i as M};
